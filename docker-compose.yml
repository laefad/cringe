version: '3'

services:
  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    ports:
      - 15672:15672

  config:
    image: laefad/bookservice-config
    build:
      context: .
      target: prod
      dockerfile: ./config/Dockerfile
    ports:
      - "${CONFIG_PORT}:8000"
    environment:
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
    restart: always

  registry:
    environment:
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
    image: sqshq/piggymetrics-registry
    restart: always
    depends_on:
      config:
        condition: service_healthy
    ports:
      - 8761:8761

  gateway:
    environment:
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
    image: sqshq/piggymetrics-gateway
    restart: always
    depends_on:
      config:
        condition: service_healthy
    ports:
      - 80:4000

  auth-service:
    image: laefad/bookservice-auth-service
    build:
      context: .
      target: prod
      dockerfile: ./auth-service/Dockerfile
    ports:
      - "${AUTH_SERVICE_PORT}:8000"
    environment:
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
      NOTIFICATION_SERVICE_PASSWORD: $NOTIFICATION_SERVICE_PASSWORD
      STATISTICS_SERVICE_PASSWORD: $STATISTICS_SERVICE_PASSWORD
      ACCOUNT_SERVICE_PASSWORD: $ACCOUNT_SERVICE_PASSWORD
      MONGODB_PASSWORD: $MONGODB_PASSWORD
      CONFIG_SERVICE_ADDRESS: $CONFIG_SERVICE_ADDRESS
      CONFIG_SERVICE_USER: $CONFIG_SERVICE_USER
      APP_NAME: 'auth-service'
    restart: always
    depends_on:
      config:
        condition: service_healthy

  auth-mongodb:
    environment:
      MONGODB_PASSWORD: $MONGODB_PASSWORD
    image: sqshq/piggymetrics-mongodb
    restart: always

  account-service:
    environment:
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
      ACCOUNT_SERVICE_PASSWORD: $ACCOUNT_SERVICE_PASSWORD
      MONGODB_PASSWORD: $MONGODB_PASSWORD
    image: sqshq/piggymetrics-account-service
    restart: always
    depends_on:
      config:
        condition: service_healthy

  account-mongodb:
    environment:
      INIT_DUMP: account-service-dump.js
      MONGODB_PASSWORD: $MONGODB_PASSWORD
    image: sqshq/piggymetrics-mongodb
    restart: always

  statistics-service:
    environment:
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
      MONGODB_PASSWORD: $MONGODB_PASSWORD
      STATISTICS_SERVICE_PASSWORD: $STATISTICS_SERVICE_PASSWORD
    image: sqshq/piggymetrics-statistics-service
    restart: always
    depends_on:
      config:
        condition: service_healthy

  statistics-mongodb:
    environment:
      MONGODB_PASSWORD: $MONGODB_PASSWORD
    image: sqshq/piggymetrics-mongodb
    restart: always

  notification-mongodb:
    image: sqshq/piggymetrics-mongodb
    restart: always
    environment:
      MONGODB_PASSWORD: $MONGODB_PASSWORD

  monitoring:
    environment:
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
    image: sqshq/piggymetrics-monitoring
    restart: always
    depends_on:
      config:
        condition: service_healthy
    ports:
      - 9000:8080

  turbine-stream-service:
    environment:
      CONFIG_SERVICE_ADDRESS: $CONFIG_SERVICE_ADDRESS
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
      CONFIG_SERVICE_USER: $CONFIG_SERVICE_USER
      APP_NAME: 'turbine-stream-service'
    image: sqshq/piggymetrics-turbine-stream-service
    restart: always
    depends_on:
      config:
        condition: service_healthy
    ports:
    - 8989:8989

  graphql-books-sevice:
    environment:
      POSTGRESBD_USERNAME: $POSTGRESBD_USERNAME
      POSTGRESBD_PASSWORD: $POSTGRESBD_PASSWORD
      POSTGRESBD_URL: $POSTGRESBD_URL
      CONFIG_SERVICE_ADDRESS: $CONFIG_SERVICE_ADDRESS
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
      CONFIG_SERVICE_USER: $CONFIG_SERVICE_USER
      APP_NAME: 'qraphqlbooks-service'
    build:
      context: .
      target: prod
      dockerfile: ./graphql-books/Dockerfile
    restart: always
    depends_on:
      config:
        condition: service_healthy
    ports:
    - "${GRAPHQL_BOOKS_PORT}:8000"

  postgres:
    container_name: postgres
    image: postgres:latest
    volumes: 
      - postgres-source:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: $POSTGRESBD_USERNAME
      POSTGRES_PASSWORD: $POSTGRESBD_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
      PGPASSWORD: $POSTGRESBD_PASSWORD
    ports:
      - 5432:5432

volumes:
  postgres-source:
    name: postgres-source
    
