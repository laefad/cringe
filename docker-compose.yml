version: '3.8'

x-deploy:
  &default-deploy
  resources:
    limits:
      cpus: '0.3'
      memory: 500M

services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    restart: always
    ports:
      - 15672:15672
    deploy: *default-deploy

  config:
    image: laefad/bookservice-config
    container_name: config
    build:
      context: .
      target: prod
      dockerfile: ./config/Dockerfile
    # ports:
    #   - "${CONFIG_PORT}:8000"
    environment:
      CONFIG_SERVICE_USER: $CONFIG_SERVICE_USER
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
    restart: always
    deploy: *default-deploy

  account-service:
    image: laefad/bookservice-account-service
    container_name: account-service
    build:
      context: .
      target: prod
      dockerfile: ./account-service/Dockerfile
    # ports:
    #   - 5656:8000
    environment:
      CONFIG_SERVICE_ADDRESS: $CONFIG_SERVICE_ADDRESS
      CONFIG_SERVICE_USER: $CONFIG_SERVICE_USER
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
      POSTGRESBD_USERNAME: $POSTGRES_USERS_ACCOUNT_USERNAME
      POSTGRESBD_PASSWORD: $POSTGRES_USERS_ACCOUNT_PASSWORD
      POSTGRESBD_URL: $POSTGRES_USERS_ACCOUNT_URL
      ACCOUNT_SERVICE_PASSWORD: $ACCOUNT_SERVICE_PASSWORD
    restart: always
    depends_on:
      config:
        condition: service_healthy
      postgres-users-account: 
        condition: service_started
    deploy: *default-deploy

  auth-service:
    image: laefad/bookservice-auth-service
    container_name: auth-service
    build:
      context: .
      target: prod
      dockerfile: ./auth-service/Dockerfile
    # ports:
    #   - 5000:8000
    environment:
      CONFIG_SERVICE_ADDRESS: $CONFIG_SERVICE_ADDRESS
      CONFIG_SERVICE_USER: $CONFIG_SERVICE_USER
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
      POSTGRESBD_USERNAME: $POSTGRES_USERS_AUTH_USERNAME
      POSTGRESBD_PASSWORD: $POSTGRES_USERS_AUTH_PASSWORD
      POSTGRESBD_URL: $POSTGRES_USERS_AUTH_URL
      BOOKS_SERVICE_PASSWORD: $BOOKS_SERVICE_PASSWORD
      ACCOUNT_SERVICE_PASSWORD: $ACCOUNT_SERVICE_PASSWORD
    restart: always
    depends_on:
      config:
        condition: service_healthy
      postgres-users-auth: 
        condition: service_started
    deploy: *default-deploy

  registry:
    image: laefad/bookservice-registry
    container_name: registry
    build:
      context: .
      target: prod
      dockerfile: ./registry/Dockerfile
    restart: always
    ports:
      - 8761:8000
    environment:
      CONFIG_SERVICE_ADDRESS: $CONFIG_SERVICE_ADDRESS
      CONFIG_SERVICE_USER: $CONFIG_SERVICE_USER
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
    depends_on:
      config:
        condition: service_healthy
    deploy: *default-deploy

  gateway:
    image: laefad/bookservice-gateway
    container_name: gateway
    build:
      context: .
      target: prod
      dockerfile: ./gateway/Dockerfile
    restart: always
    ports:
      - 80:8000
    environment:
      CONFIG_SERVICE_ADDRESS: $CONFIG_SERVICE_ADDRESS
      CONFIG_SERVICE_USER: $CONFIG_SERVICE_USER
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
    depends_on:
      config:
        condition: service_healthy
    deploy: *default-deploy

  monitoring:
    image: laefad/bookservice-monitoring
    container_name: monitoring
    build:
      context: .
      target: prod
      dockerfile: ./monitoring/Dockerfile
    restart: always
    ports:
      - 9000:8000
    environment:
      CONFIG_SERVICE_ADDRESS: $CONFIG_SERVICE_ADDRESS
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
      CONFIG_SERVICE_USER: $CONFIG_SERVICE_USER
    depends_on:
      config:
        condition: service_healthy
      turbine-stream-service: 
        condition: service_started
    deploy: *default-deploy

  turbine-stream-service:
    image: laefad/bookservice-turbine-stream-service
    container_name: turbine-stream-service
    build:
      context: .
      target: prod
      dockerfile: ./turbine-stream-service/Dockerfile
    restart: always
    environment:
      CONFIG_SERVICE_ADDRESS: $CONFIG_SERVICE_ADDRESS
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
      CONFIG_SERVICE_USER: $CONFIG_SERVICE_USER
    depends_on:
      config:
        condition: service_healthy
      rabbitmq: 
        condition: service_started
    deploy: *default-deploy
    ports:
      - 8989:8000
  
  books-service:
    image: laefad/bookservice-books-service
    container_name: books-service
    build:
      context: .
      target: prod
      dockerfile: ./books-service/Dockerfile
    restart: always
    ports:
      - 8000:8000
    environment:
      POSTGRESBD_USERNAME: $POSTGRESBD_USERNAME
      POSTGRESBD_PASSWORD: $POSTGRESBD_PASSWORD
      POSTGRESBD_URL: $POSTGRESBD_URL
      CONFIG_SERVICE_ADDRESS: $CONFIG_SERVICE_ADDRESS
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
      CONFIG_SERVICE_USER: $CONFIG_SERVICE_USER
      BOOKS_SERVICE_PASSWORD: $BOOKS_SERVICE_PASSWORD
    depends_on:
      config:
        condition: service_healthy
      postgres:
        condition: service_started
    deploy: *default-deploy

  postgres:
    container_name: postgres
    image: postgres:latest
    volumes: 
      - ./postgres:/docker-entrypoint-initdb.d
      - postgres-source:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: $POSTGRESBD_USERNAME
      POSTGRES_PASSWORD: $POSTGRESBD_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
      PGPASSWORD: $POSTGRESBD_PASSWORD
    deploy: *default-deploy

  postgres-users-auth:
    container_name: postgres-users-auth
    image: postgres:latest
    volumes: 
      - ./postgres-users-auth:/docker-entrypoint-initdb.d
      - postgres-users-auth-source:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: $POSTGRES_USERS_AUTH_USERNAME
      POSTGRES_PASSWORD: $POSTGRES_USERS_AUTH_PASSWORD
      POSTGRES_DB: $POSTGRES_USERS_AUTH_DB
      PGPASSWORD: $POSTGRES_USERS_AUTH_PASSWORD
    deploy: *default-deploy

  postgres-users-account:
    container_name: postgres-users-account
    image: postgres:latest
    volumes: 
      - ./postgres-users-account:/docker-entrypoint-initdb.d
      - postgres-users-account-source:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: $POSTGRES_USERS_ACCOUNT_USERNAME
      POSTGRES_PASSWORD: $POSTGRES_USERS_ACCOUNT_PASSWORD
      POSTGRES_DB: $POSTGRES_USERS_ACCOUNT_DB
      PGPASSWORD: $POSTGRES_USERS_ACCOUNT_PASSWORD
    deploy: *default-deploy

volumes:
  postgres-source:
    name: postgres-source
  postgres-users-auth-source:
    name: postgres-users-auth-source
  postgres-users-account-source:
    name: postgres-users-account-source
  
    
