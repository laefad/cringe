version: '3'

services:
  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    ports:
      - 15672:15672

  config:
    image: laefad/bookservice-config
    container_name: config
    build:
      context: .
      target: prod
      dockerfile: ./config/Dockerfile
    # ports:
    #   - "${CONFIG_PORT}:8000"
    environment:
      CONFIG_SERVICE_USER: $CONFIG_SERVICE_USER
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 500M

  auth-service:
    image: laefad/bookservice-auth-service
    container_name: auth-service
    build:
      context: .
      target: prod
      dockerfile: ./auth-service/Dockerfile
    # ports:
    #   - "${AUTH_SERVICE_PORT}:8000"
    environment:
      CONFIG_SERVICE_ADDRESS: $CONFIG_SERVICE_ADDRESS
      CONFIG_SERVICE_USER: $CONFIG_SERVICE_USER
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
      # NOTIFICATION_SERVICE_PASSWORD: $NOTIFICATION_SERVICE_PASSWORD
      # STATISTICS_SERVICE_PASSWORD: $STATISTICS_SERVICE_PASSWORD
      # ACCOUNT_SERVICE_PASSWORD: $ACCOUNT_SERVICE_PASSWORD
      MONGODB_PASSWORD: $MONGODB_PASSWORD
    restart: always
    depends_on:
      config:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 500M

  registry:
    image: laefad/bookservice-registry
    container_name: registry
    build:
      context: .
      target: prod
      dockerfile: ./registry/Dockerfile
    restart: always
    # ports:
    #   - 8761:8000
    environment:
      CONFIG_SERVICE_ADDRESS: $CONFIG_SERVICE_ADDRESS
      CONFIG_SERVICE_USER: $CONFIG_SERVICE_USER
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
    depends_on:
      config:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 500M

  gateway:
    image: laefad/bookservice-gateway
    container_name: gateway
    build:
      context: .
      target: prod
      dockerfile: ./gateway/Dockerfile
    restart: always
    ports:
      - 80:8000
    environment:
      CONFIG_SERVICE_ADDRESS: $CONFIG_SERVICE_ADDRESS
      CONFIG_SERVICE_USER: $CONFIG_SERVICE_USER
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
    depends_on:
      config:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 500M

  auth-mongodb:
    environment:
      MONGODB_PASSWORD: $MONGODB_PASSWORD
    image: sqshq/piggymetrics-mongodb
    restart: always

  # account-service:
  #   environment:
  #     CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
  #     ACCOUNT_SERVICE_PASSWORD: $ACCOUNT_SERVICE_PASSWORD
  #     MONGODB_PASSWORD: $MONGODB_PASSWORD
  #   image: sqshq/piggymetrics-account-service
  #   restart: always
  #   depends_on:
  #     config:
  #       condition: service_healthy

  # account-mongodb:
  #   environment:
  #     INIT_DUMP: account-service-dump.js
  #     MONGODB_PASSWORD: $MONGODB_PASSWORD
  #   image: sqshq/piggymetrics-mongodb
  #   restart: always

  # statistics-service:
  #   environment:
  #     CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
  #     MONGODB_PASSWORD: $MONGODB_PASSWORD
  #     STATISTICS_SERVICE_PASSWORD: $STATISTICS_SERVICE_PASSWORD
  #   image: sqshq/piggymetrics-statistics-service
  #   restart: always
  #   depends_on:
  #     config:
  #       condition: service_healthy

  # statistics-mongodb:
  #   environment:
  #     MONGODB_PASSWORD: $MONGODB_PASSWORD
  #   image: sqshq/piggymetrics-mongodb
  #   restart: always

  # notification-mongodb:
  #   image: sqshq/piggymetrics-mongodb
  #   restart: always
  #   environment:
  #     MONGODB_PASSWORD: $MONGODB_PASSWORD

  monitoring:
    environment:
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
    image: sqshq/piggymetrics-monitoring
    restart: always
    depends_on:
      config:
        condition: service_healthy
    # ports:
    #   - 9000:8080

  turbine-stream-service:
    environment:
      CONFIG_SERVICE_ADDRESS: $CONFIG_SERVICE_ADDRESS
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
      CONFIG_SERVICE_USER: $CONFIG_SERVICE_USER
    image: sqshq/piggymetrics-turbine-stream-service
    restart: always
    depends_on:
      config:
        condition: service_healthy
    # ports:
    # - 8989:8989

  graphql-books-service:
    environment:
      POSTGRESBD_USERNAME: $POSTGRESBD_USERNAME
      POSTGRESBD_PASSWORD: $POSTGRESBD_PASSWORD
      POSTGRESBD_URL: $POSTGRESBD_URL
      CONFIG_SERVICE_ADDRESS: $CONFIG_SERVICE_ADDRESS
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
      CONFIG_SERVICE_USER: $CONFIG_SERVICE_USER
    build:
      context: .
      target: prod
      dockerfile: ./graphql-books-service/Dockerfile
    restart: always
    depends_on:
      config:
        condition: service_healthy

  postgres:
    container_name: postgres
    image: postgres:latest
    volumes: 
      - postgres-source:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: $POSTGRESBD_USERNAME
      POSTGRES_PASSWORD: $POSTGRESBD_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
      PGPASSWORD: $POSTGRESBD_PASSWORD
    ports:
      - 5432:5432

volumes:
  postgres-source:
    name: postgres-source
    
