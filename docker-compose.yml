version: '3'

services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    restart: always
    ports:
      - 15672:15672
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 500M

  config:
    image: laefad/bookservice-config
    container_name: config
    build:
      context: .
      target: prod
      dockerfile: ./config/Dockerfile
    # ports:
    #   - "${CONFIG_PORT}:8000"
    environment:
      CONFIG_SERVICE_USER: $CONFIG_SERVICE_USER
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 500M

  auth-service:
    image: laefad/bookservice-auth-service
    container_name: auth-service
    build:
      context: .
      target: prod
      dockerfile: ./auth-service/Dockerfile
    ports:
      - 5000:8000
    environment:
      CONFIG_SERVICE_ADDRESS: $CONFIG_SERVICE_ADDRESS
      CONFIG_SERVICE_USER: $CONFIG_SERVICE_USER
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
      POSTGRESBD_USERNAME: $POSTGRESBD_USERNAME
      POSTGRESBD_PASSWORD: $POSTGRESBD_PASSWORD
      POSTGRESBD_URL: $POSTGRESBD_URL
      BOOKS_SERVICE_PASSWORD: $BOOKS_SERVICE_PASSWORD
    restart: always
    depends_on:
      config:
        condition: service_healthy
      postgres: 
        condition: service_started
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 500M

  registry:
    image: laefad/bookservice-registry
    container_name: registry
    build:
      context: .
      target: prod
      dockerfile: ./registry/Dockerfile
    restart: always
    ports:
      - 8761:8000
    environment:
      CONFIG_SERVICE_ADDRESS: $CONFIG_SERVICE_ADDRESS
      CONFIG_SERVICE_USER: $CONFIG_SERVICE_USER
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
    depends_on:
      config:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 500M

  gateway:
    image: laefad/bookservice-gateway
    container_name: gateway
    build:
      context: .
      target: prod
      dockerfile: ./gateway/Dockerfile
    restart: always
    ports:
      - 80:8000
    environment:
      CONFIG_SERVICE_ADDRESS: $CONFIG_SERVICE_ADDRESS
      CONFIG_SERVICE_USER: $CONFIG_SERVICE_USER
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
    depends_on:
      config:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 500M

  monitoring:
    image: laefad/bookservice-monitoring
    container_name: monitoring
    build:
      context: .
      target: prod
      dockerfile: ./monitoring/Dockerfile
    restart: always
    ports:
      - 9000:8000
    environment:
      CONFIG_SERVICE_ADDRESS: $CONFIG_SERVICE_ADDRESS
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
      CONFIG_SERVICE_USER: $CONFIG_SERVICE_USER
    depends_on:
      config:
        condition: service_healthy
      turbine-stream-service: 
        condition: service_started
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 500M

  turbine-stream-service:
    image: laefad/bookservice-turbine-stream-service
    container_name: turbine-stream-service
    build:
      context: .
      target: prod
      dockerfile: ./turbine-stream-service/Dockerfile
    restart: always
    environment:
      CONFIG_SERVICE_ADDRESS: $CONFIG_SERVICE_ADDRESS
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
      CONFIG_SERVICE_USER: $CONFIG_SERVICE_USER
    depends_on:
      config:
        condition: service_healthy
      rabbitmq: 
        condition: service_started
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 500M
    ports:
      - 8989:8000
  
  books-service:
    image: laefad/bookservice-books-service
    container_name: books-service
    build:
      context: .
      target: prod
      dockerfile: ./books-service/Dockerfile
    restart: always
    ports:
      - 8000:8000
    environment:
      POSTGRESBD_USERNAME: $POSTGRESBD_USERNAME
      POSTGRESBD_PASSWORD: $POSTGRESBD_PASSWORD
      POSTGRESBD_URL: $POSTGRESBD_URL
      # CONFIG_SERVICE_ADDRESS: $CONFIG_SERVICE_ADDRESS
      # CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
      # CONFIG_SERVICE_USER: $CONFIG_SERVICE_USER
      # BOOKS_SERVICE_PASSWORD: $BOOKS_SERVICE_PASSWORD
    depends_on:
      # config:
      #   condition: service_healthy
      postgres:
        condition: service_started
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 500M

  postgres:
    container_name: postgres
    image: postgres:latest
    volumes: 
      - ./postgres:/docker-entrypoint-initdb.d
      - postgres-source:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: $POSTGRESBD_USERNAME
      POSTGRES_PASSWORD: $POSTGRESBD_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
      PGPASSWORD: $POSTGRESBD_PASSWORD
    ports:
      - 5432:5432
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 500M

  

volumes:
  postgres-source:
    name: postgres-source
    
