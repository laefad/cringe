version: '3.8'

x-deploy:
  &default-deploy
  resources:
    limits:
      cpus: '0.3'
      memory: 500M

services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    restart: always
    ports:
      - 15672:15672
    deploy: *default-deploy

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    restart: always
    ports:
      - 5000:8080
    depends_on:
      postgres-keycloak: 
        condition: service_started
    env_file:
      - env/service/keycloak.env
    deploy:
      << : *default-deploy
      resources:
        limits:
          memory: 1000M

  config:
    image: laefad/bookservice-config
    container_name: config
    build:
      context: .
      target: prod
      dockerfile: ./config/Dockerfile
    # ports:
    #   - "8888:8000"
    env_file:
      - env/service/config.env
    restart: always
    deploy: *default-deploy

  account-service:
    image: laefad/bookservice-account-service
    container_name: account-service
    build:
      context: .
      target: prod
      dockerfile: ./account-service/Dockerfile
    # ports:
    #   - 5656:8000
    env_file:
      - env/service/account.env
      - env/client/config.env
      - env/client/oauth2-resourceserver.env
    restart: always
    depends_on:
      config:
        condition: service_healthy
      postgres-users-account: 
        condition: service_started
    deploy: *default-deploy

  registry:
    image: laefad/bookservice-registry
    container_name: registry
    build:
      context: .
      target: prod
      dockerfile: ./registry/Dockerfile
    restart: always
    ports:
      - 8761:8000
    env_file:
      - env/client/config.env
      # - env/client/oauth2-resourceserver.env
    depends_on:
      config:
        condition: service_healthy
    deploy: *default-deploy

  gateway:
    image: laefad/bookservice-gateway
    container_name: gateway
    build:
      context: .
      target: prod
      dockerfile: ./gateway/Dockerfile
    restart: always
    ports:
      - 80:8000
    env_file:
      - env/client/config.env
      # - env/client/oauth2-resourceserver.env
    depends_on:
      config:
        condition: service_healthy
    deploy: *default-deploy

  monitoring:
    image: laefad/bookservice-monitoring
    container_name: monitoring
    build:
      context: .
      target: prod
      dockerfile: ./monitoring/Dockerfile
    restart: always
    ports:
      - 9000:8000
    env_file:
      - env/client/config.env
      # - env/client/oauth2-resourceserver.env
    depends_on:
      config:
        condition: service_healthy
      turbine-stream-service: 
        condition: service_started
    deploy: *default-deploy

  turbine-stream-service:
    image: laefad/bookservice-turbine-stream-service
    container_name: turbine-stream-service
    build:
      context: .
      target: prod
      dockerfile: ./turbine-stream-service/Dockerfile
    restart: always
    env_file:
      - env/client/config.env
      # - env/client/oauth2-resourceserver.env
    depends_on:
      config:
        condition: service_healthy
      rabbitmq: 
        condition: service_started
    deploy: *default-deploy
    ports:
      - 8989:8000
  
  books-service:
    image: laefad/bookservice-books-service
    container_name: books-service
    build:
      context: .
      target: prod
      dockerfile: ./books-service/Dockerfile
    restart: always
    ports:
      - 8000:8000
    env_file:
      - env/service/books.env
      - env/client/config.env
      - env/client/oauth2-resourceserver.env
    depends_on:
      config:
        condition: service_healthy
      postgres-books:
        condition: service_started
    deploy: *default-deploy

  postgres-books:
    container_name: postgres-books
    image: postgres:latest
    volumes: 
      - ./postgres:/docker-entrypoint-initdb.d
      - postgres-books:/var/lib/postgresql/data
    env_file:
      - env/database/books.env
    deploy: *default-deploy

  postgres-users-account:
    container_name: postgres-users-account
    image: postgres:latest
    volumes: 
      - ./postgres-users-account:/docker-entrypoint-initdb.d
      - postgres-users-account-source:/var/lib/postgresql/data
    env_file:
      - env/database/account.env
    deploy: *default-deploy

  postgres-keycloak:
    container_name: postgres-keycloak
    image: postgres:latest
    restart: always
    env_file:
      - env/database/keycloak.env
    volumes:
      - postgres-keycloak-source:/var/lib/postgresql/data
    deploy: *default-deploy

volumes:
  postgres-books:
    name: postgres-books
  postgres-users-account-source:
    name: postgres-users-account-source
  postgres-keycloak-source:
    name: postgres-keycloak-source
